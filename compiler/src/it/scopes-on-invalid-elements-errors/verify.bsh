import dagger.testing.it.BuildLogValidator;
import java.io.File;

File buildLog = new File(basedir, "build.log");
new BuildLogValidator().assertHasText(buildLog, new String[]{
    "Scoping annotations are only allowed on concrete types and methods: test.TestApp.TestClass1.field"});
new BuildLogValidator().assertHasText(buildLog, new String[]{
    "Scoping annotations are only allowed on concrete types and methods: test.TestApp.TestClass2.field"});
new BuildLogValidator().assertHasText(buildLog, new String[]{
    "Scoping annotations are only allowed on concrete types and methods: test.TestApp.TestClass3.TestClass3(int)"});
new BuildLogValidator().assertHasText(buildLog, new String[]{
    "Scoping annotations are only allowed on concrete types and methods: constructorParam1"});
new BuildLogValidator().assertHasText(buildLog, new String[]{
    "Scoping annotations are only allowed on concrete types and methods: test.TestApp.TestClass4.TestClass4(int)"});
new BuildLogValidator().assertHasText(buildLog, new String[]{
    "Scoping annotations are only allowed on concrete types and methods: constructorParam2"});
new BuildLogValidator().assertHasText(buildLog, new String[]{
    "Scoping annotations are only allowed on concrete types and methods: methodParam1"});
new BuildLogValidator().assertHasText(buildLog, new String[]{
    "Scoping annotations are only allowed on concrete types and methods: methodParam2"});
